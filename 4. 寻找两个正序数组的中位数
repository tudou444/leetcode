//归并排序，时间O（M+N）空间O（M+N）
class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        int m = nums1.size(), n = nums2.size();
        vector<int> temp;
        int p1 = 0, p2 = 0;
        while(p1 < m && p2 < n){
            if(nums1[p1] < nums2[p2]){
                temp.emplace_back(nums1[p1]);
                p1++;
            }else{
                temp.emplace_back(nums2[p2]);
                p2++;
            }
        }
        while(p1 < m){
            temp.emplace_back(nums1[p1++]);
        }
        while(p2 < n){
            temp.emplace_back(nums2[p2++]);
        }
        if((m+n)%2 == 0){
            return ((temp[(m+n-1)/2] + temp[(m+n-1)/2+1]) / 2.0); //将结果转变为double！
        }
        return temp[(m+n-1)/2];
    }
};
