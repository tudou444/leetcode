//动态规划，ans(i)表示打劫到第i+1个房屋可获得的最大利润
class Solution {
public:
    int rob(vector<int>& nums) {
        int n = nums.size();
        vector<int> ans(n);
        if(n == 0){
            return 0;
        }else if(n == 1){
            return nums[0];
        }else if(n == 2){
            return max(nums[0], nums[1]);
        }else{
            ans[0] = nums[0];
            ans[1] = max(nums[0], nums[1]);
            for(int i = 2; i < n; i++){
                ans[i] = max(ans[i-1], ans[i-2]+nums[i]);
            }
        }
        return ans[n-1];
    }
};
