/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
 //队列中一次性加入下一层的全部内容，时间O（n）空间O（n）
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> ans;
        queue<TreeNode*> q;
        TreeNode* cur = root;
        if(!root){
            return ans;
        }
        q.push(cur);
        while(!q.empty()){
            int n = q.size();
            ans.push_back(vector<int>());
            for(int i = 0; i < n; i++){
                cur = q.front(); q.pop();
                ans.back().emplace_back(cur->val);
                if(cur->left) q.push(cur->left);
                if(cur->right) q.push(cur->right);
            }
        }
        return ans;
    }
};
